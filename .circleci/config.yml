version: 2
jobs:
  tests:
    docker:
      - image: circleci/python:3.6.4

    steps:
      - checkout

      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "app/requirements.txt" }}
          - v1-dependencies-

      - run:
          name: install dependencies
          command: |
            python3 -m venv venv
            . venv/bin/activate
            pip install -r app/requirements.txt

      - save_cache:
          paths:
            - ./venv
          key: v1-dependencies-{{ checksum "app/requirements.txt" }}
        
      - run:
          name: run tests
          command: | 
            . venv/bin/activate
            pytest app/tests/*.py --html=app/tests/report/report.html

      - store_artifacts:
          path: app/tests/report

  deploy:
    docker:
      - image: circleci/python:3.6.4

    steps:
      - checkout

      - setup_remote_docker

      - run:
          name: Build Docker image
          command: |
            docker build . -t gcr.io/groupscrawler/crawler

      - run:
          name: Intall Gcloud
          command: |
            sudo apt-get install lsb-release
            export CLOUD_SDK_REPO="cloud-sdk-$(lsb_release -c -s)" 
            echo "deb http://packages.cloud.google.com/apt $CLOUD_SDK_REPO main" | sudo tee -a /etc/apt/sources.list.d/google-cloud-sdk.list
            curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | sudo apt-key add -

            sudo apt-get update
            sudo apt-get install -y kubectl google-cloud-sdk

      - run:
          name: Decode and Store Service Account
          command: echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json

      - run:
          name: Configure Gcloud
          command: |
            gcloud auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            gcloud --quiet config set project ${GOOGLE_PROJECT_ID}
            gcloud --quiet config set compute/zone ${GOOGLE_COMPUTE_ZONE}
            gcloud --quiet container clusters get-credentials ${GOOGLE_CLUSTER_NAME}

      - run:
          name: Upload image to gloud registry
          command: |
            gcloud docker -- push gcr.io/groupscrawler/crawler:latest

      - run:
          name: Deploy
          command: |
            kubectl delete -f nginx-deployment.yaml -f nginx-service.yaml
            kubectl apply -f nginx-deployment.yaml -f nginx-service.yaml

workflows:
  version: 2
  build_and_test:
    jobs:
      - tests
      - deploy:
          filters:
            branches:
              only:
                - master
          requires:
            - tests
